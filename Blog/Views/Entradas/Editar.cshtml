@model EntradaEditarViewModel

@{
    ViewData["Title"] = "Editar articulo";
    var mostrarInputFile = string.IsNullOrEmpty(Model.ImagenPortadaActual);
}

<h1>Editar articulo</h1>

<h5>
    Aquí podemos editar una entrada al blog.
</h5>

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form enctype="multipart/form-data" asp-action="Editar" id="formEntrada">
    <div class="row mb-1" >
        <div class="col-12 mb-1">
            <label asp-for="Titulo" class="form-label"></label>
            <input type="text" autocomplete="off" asp-for="Titulo" class="form-control" />
            <span asp-validation-for="Titulo" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-2">
        <label asp-for="Cuerpo" class="form-label"></label>
        <input style="display: none" asp-for="Cuerpo" class="form-control" />
        <div id="editor"></div>
        <span id="cuerpo-error" class="text-danger"></span>
    </div>

    <div class="row mb-2">
        <input type="hidden" id="imagenRemovida" name="imagenRemovida" value="false" />
        <input type="hidden" asp-for="ImagenPortadaActual" />
        <input type="hidden" asp-for="ImagenPortadaIA" />

        <div class="d-flex mb-1">
            <div class="col-8 align-content-md-end">
                <label asp-for="ImagenPortada" class="form-label"></label>
            </div>
            <div class="col-2 d-grid gap-2 d-md-flex justify-content-md-end">
                <button type="button" class="btn btn-outline-warning btn-sm" mt-2" onclick="generarImagen()">Generar img con IA</button>
            </div>
            <div class="col-2 d-grid gap-2 d-md-flex justify-content-md-end">
                <button id="btnRemoverImagen" onclick="removerImagen()" type="button"
                        class="btn btn-outline-danger"
                        style="@(mostrarInputFile ? "display: none;" : "display: inline;")">
                    Remover
                </button>
            </div>
        </div>
        <div class="col-12">
            <input type="file" asp-for="ImagenPortada" class="form-control"
                   onchange="mostrarPrevisualizacion(event)"
                   style="@(mostrarInputFile ? "display: block;" : "display:none;")" />
            <span asp-validation-for="ImagenPortada" class="text-danger"></span>
        </div>

        <div class="col-12">
            <img id="loading-imagen-ia" class="mt-2 mb-2"
                 style="width: 50px; display: none" src="~/img/loading.gif" />
        </div>

        <div class="col-12">
            <img id="PreviewImagen" src="@Model.ImagenPortadaActual"
                 style="@(mostrarInputFile ? "display: none;" : "display: block;") width:500px; height: 300px;" />
        </div>
    </div>

    <div class="row mb-1">
        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <button type="button" onclick="btnEnviarClick()" class="btn btn-outline-primary">Guardar cambios</button>
            <a class="btn btn-secondary" asp-action="Index" asp-controller="Home">Cancelar</a>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/formulario-entradas.js"></script>

    <script>
        function removerImagen(){
            const btnRemoverImagen = document.getElementById("btnRemoverImagen");
            const previewImagen = document.getElementById("PreviewImagen");
            const imagenRemovida = document.getElementById("imagenRemovida");
            const inputImagenPortada = document.getElementById("ImagenPortada");

            previewImagen.style.display = "none";
            btnRemoverImagen.style.display = "none";
            inputImagenPortada.style.display = "block";
            imagenRemovida.value = "true";
        }

        let contenidoCuerpo = $("#Cuerpo").val();
        let jsonDelta = JSON.parse(contenidoCuerpo);
        cargarContenido(jsonDelta);
    </script>
}